// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/03/2020 16:16:33"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          HarvardArch
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module HarvardArch_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
// wires                                               
wire [15:0] alu_out;
wire [15:0] data_a;
wire [15:0] data_b;
wire [15:0] ir_mux;
wire [10:0] pc_out;
wire [15:0] prog;
wire [15:0] r0;
wire [15:0] r1;
wire [15:0] r2;
wire [15:0] r3;
wire [15:0] r4;
wire [10:0] stack_out;
wire [2:0] state;

// assign statements (if any)                          
HarvardArch i1 (
// port map - connection between master ports and signals/registers   
	.alu_out(alu_out),
	.CLK(CLK),
	.data_a(data_a),
	.data_b(data_b),
	.ir_mux(ir_mux),
	.pc_out(pc_out),
	.prog(prog),
	.r0(r0),
	.r1(r1),
	.r2(r2),
	.r3(r3),
	.r4(r4),
	.stack_out(stack_out),
	.state(state)
);
initial 
begin 
#1000000 $finish;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #1000 1'b1;
	#1000;
end 
endmodule

